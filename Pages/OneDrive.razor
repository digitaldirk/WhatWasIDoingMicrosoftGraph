@page "/recentonedrive"

@using Microsoft.Identity.Web
@using Microsoft.Graph
@inject Microsoft.Graph.GraphServiceClient GraphServiceClient
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler



@if (RecentOneDriveItems == null)
{
    <p><em>Loading...</em></p>
}
else
{


    if (RecentOneDriveItems.Count < 1)
    {
        <b>Sorry you do not have any data to show</b>
    }
    else
    {
        <MudSimpleTable>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Last Modified</th>
                    <th>Modified By</th>
                    <th>Link</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var a in RecentOneDriveItems.CurrentPage)
                {
                    <tr>
                        <td>@a.Name</td>
                        <td>@a.LastModifiedDateTime</td>
                        <td>@a.LastModifiedBy.User.DisplayName</td>
                        <td><MudLink Href="@a.WebUrl" Target="_blank" Underline="Underline.Always">Open item</MudLink></td>
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
    }
}
@if (Errored)
{
    <b>Sorry :( the app errored: @ErrorText</b>
}
@code {
    IDriveRecentCollectionPage RecentOneDriveItems;
    bool Errored = false;
    string ErrorText = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            RecentOneDriveItems = await GraphServiceClient.Me.Drive.Recent().Request().Top(20).GetAsync();
        }
        catch (Exception ex)
        {
            Errored = true;
            ErrorText = ex.Message;
        }
    }
}
